CREATE DATABASE ASSIGNMENT;

CREATE TABLE sales_data(
order_id VARCHAR(50),
order_date	DATE,
ship_date	DATE ,
ship_mode	VARCHAR(50),
Customer_name VARCHAR(100),	
segment	VARCHAR(15),
state    VARCHAR(100),
country  VARCHAR(100),
market  VARCHAR(10),	
region   VARCHAR(20),
product_id	VARCHAR(20),
category	VARCHAR(20),
sub_category VARCHAR(20),
product_name  TEXT,	
sales	STRING,
quantity STRING,
discount STRING,
profit	STRING,
shipping_cost STRING,
order_priority	VARCHAR(10),
year STRING

);

DROP TABLE sales_data;
DESCRIBE TABLE sales_data;
SELECT * FROM sales_data;

--COPY TABLE TO ANOTHER TABLE
CREATE OR REPLACE TABLE sales_data_copy AS 
SELECT * FROM sales_data;

SELECT * FROM sales_data_copy;
--------------------------------------------------------------------------------------
//1 .SET PRIMARY KEY.
ALTER TABLE sales_data_copy ADD PRIMARY KEY (ORDER_ID);

//2. CHECK THE ORDER DATE AND SHIP DATE TYPE AND THINK IN WHICH DATA TYPE YOU HAVE TO CHANGE.
DESCRIBE TABLE sales_data_copy;
--We see columns ORDER DATE AND SHIP DATE are date type in 'YYYY-MM-DD' formate

//3. EXTACT THE LAST NUMBER AFTER THE - AND CREATE OTHER COLUMN AND UPDATE IT.
SELECT ORDER_ID ,SUBSTRING(ORDER_ID,9) AS ORDER_NUMBER FROM sales_data;


//4.  FLAG ,IF DISCOUNT IS GREATER THEN 0 THEN  YES ELSE FALSE AND PUT IT IN NEW COLUMN FRO EVERY ORDER ID.
SELECT DISCOUNT,
CASE 
WHEN (DISCOUNT> 0) THEN 'YES'
ELSE 'FALSE'
END AS IF_DISCOUNTED
FROM sales_data;

SELECT PROFIT,
CASE 
WHEN (PROFIT> 0) THEN 'PROFIT'
WHEN (PROFIT < 0) THEN 'LOSS'
ELSE 'NO PROFIT NO LOSS'
END AS SALES_STATUS
FROM sales_data;


//5.  FIND OUT THE FINAL PROFIT AND PUT IT IN COLUMN FOR EVERY ORDER ID.
SELECT * FROM sales_data;


//6.  FIND OUT HOW MUCH DAYS TAKEN FOR EACH ORDER TO PROCESS FOR THE SHIPMENT FOR EVERY ORDER ID.
SELECT *, DATEDIFF('DAY',ORDER_DATE,SHIP_DATE) AS PROCESS_DAY FROM sales_data;


//7 . FLAG THE PROCESS DAY AS BY RATING IF IT TAKES LESS OR EQUAL 3  DAYS MAKE 5,LESS OR EQUAL 
//THAN 6 DAYS BUT MORE THAN 3 MAKE 4,LESS THAN 10 BUT MORE THAN 6 MAKE 3,MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID.
CREATE VIEW RATING_VIEW AS 
SELECT ORDER_ID,ORDER_DATE,SHIP_DATE,DATEDIFF('DAY',ORDER_DATE,SHIP_DATE) AS PROCESS_DAY FROM sales_data;

select * from RATING_VIEW;

SELECT PROCESS_DAY,
CASE 
WHEN (PROCESS_DAY <= 3) THEN '5'
WHEN (PROCESS_DAY > 3 AND PROCESS_DAY <= 6) THEN '4'
WHEN (PROCESS_DAY > 6 AND PROCESS_DAY <= 10) THEN '3'
WHEN (PROCESS_DAY > 10) THEN '2'
ELSE 'NA'
END AS RATINGS
FROM RATING_VIEW;






